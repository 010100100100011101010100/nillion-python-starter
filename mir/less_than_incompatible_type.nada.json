{
  "functions": [],
  "parties": [
    {
      "name": "Party1",
      "source_ref": {
        "file": "less_than.py",
        "lineno": 6,
        "offset": 72,
        "length": 33
      }
    },
    {
      "name": "Party2",
      "source_ref": {
        "file": "less_than.py",
        "lineno": 7,
        "offset": 106,
        "length": 33
      }
    }
  ],
  "inputs": [
    {
      "type": {
        "Secret": {
          "Integer": null
        }
      },
      "party": "Party1",
      "name": "A",
      "doc": "",
      "source_ref": {
        "file": "less_than.py",
        "lineno": 8,
        "offset": 140,
        "length": 52
      }
    },
    {
      "type": {
        "Secret": {
          "Integer": null
        }
      },
      "party": "Party1",
      "name": "C",
      "doc": "",
      "source_ref": {
        "file": "less_than.py",
        "lineno": 10,
        "offset": 246,
        "length": 52
      }
    },
    {
      "type": {
        "Secret": {
          "Integer": null
        }
      },
      "party": "Party2",
      "name": "B",
      "doc": "",
      "source_ref": {
        "file": "less_than.py",
        "lineno": 9,
        "offset": 193,
        "length": 52
      }
    },
    {
      "type": {
        "Secret": {
          "Integer": null
        }
      },
      "party": "Party2",
      "name": "D",
      "doc": "",
      "source_ref": {
        "file": "less_than.py",
        "lineno": 11,
        "offset": 299,
        "length": 52
      }
    }
  ],
  "literals": [],
  "outputs": [
    {
      "name": "my_output",
      "inner": {
        "LessThan": {
          "left": {
            "Addition": {
              "left": {
                "Multiplication": {
                  "left": {
                    "InputReference": {
                      "refers_to": "A",
                      "type": {
                        "Secret": {
                          "Integer": null
                        }
                      },
                      "source_ref": {
                        "file": "less_than.py",
                        "lineno": 8,
                        "offset": 140,
                        "length": 52
                      }
                    }
                  },
                  "right": {
                    "InputReference": {
                      "refers_to": "B",
                      "type": {
                        "Secret": {
                          "Integer": null
                        }
                      },
                      "source_ref": {
                        "file": "less_than.py",
                        "lineno": 9,
                        "offset": 193,
                        "length": 52
                      }
                    }
                  },
                  "type": {
                    "Secret": {
                      "Integer": null
                    }
                  },
                  "source_ref": {
                    "file": "less_than.py",
                    "lineno": 13,
                    "offset": 353,
                    "length": 30
                  }
                }
              },
              "right": {
                "InputReference": {
                  "refers_to": "C",
                  "type": {
                    "Secret": {
                      "Integer": null
                    }
                  },
                  "source_ref": {
                    "file": "less_than.py",
                    "lineno": 10,
                    "offset": 246,
                    "length": 52
                  }
                }
              },
              "type": {
                "Secret": {
                  "Integer": null
                }
              },
              "source_ref": {
                "file": "less_than.py",
                "lineno": 13,
                "offset": 353,
                "length": 30
              }
            }
          },
          "right": {
            "Multiplication": {
              "left": {
                "InputReference": {
                  "refers_to": "B",
                  "type": {
                    "Secret": {
                      "Integer": null
                    }
                  },
                  "source_ref": {
                    "file": "less_than.py",
                    "lineno": 9,
                    "offset": 193,
                    "length": 52
                  }
                }
              },
              "right": {
                "InputReference": {
                  "refers_to": "D",
                  "type": {
                    "Secret": {
                      "Integer": null
                    }
                  },
                  "source_ref": {
                    "file": "less_than.py",
                    "lineno": 11,
                    "offset": 299,
                    "length": 52
                  }
                }
              },
              "type": {
                "Secret": {
                  "Integer": null
                }
              },
              "source_ref": {
                "file": "less_than.py",
                "lineno": 13,
                "offset": 353,
                "length": 30
              }
            }
          },
          "type": {
            "Secret": {
              "Integer": null
            }
          },
          "source_ref": {
            "file": "less_than.py",
            "lineno": 13,
            "offset": 353,
            "length": 30
          }
        }
      },
      "party": "Party1",
      "type": {
        "Secret": {
          "Boolean": null
        }
      },
      "source_ref": {
        "file": "less_than.py",
        "lineno": 15,
        "offset": 0,
        "length": 0
      }
    }
  ],
  "source_files": {
    "less_than.py": "from nada_dsl import *\nfrom nada_dsl.future import *\n\n\ndef nada_main():\n    party1 = Party(name=\"Party1\")\n    party2 = Party(name=\"Party2\")\n    A = SecretInteger(Input(name=\"A\", party=party1))\n    B = SecretInteger(Input(name=\"B\", party=party2))\n    C = SecretInteger(Input(name=\"C\", party=party1))\n    D = SecretInteger(Input(name=\"D\", party=party2))\n\n    result = A * B + C < B * D\n\n    return [Output(result, \"my_output\", party1)]\n"
  }
}